{"version":3,"sources":["components/ContactList/contactList.module.css","components/Message/message.module.css","components/Filter/filter.module.css","Phonebook/redux/actions.js","Phonebook/redux/reducer.js","Phonebook/redux/store.js","components/Message/Message.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","phonebookReducer","devTools","process","def","persistor","persistStore","Toast","message","createPortal","className","s","container","document","querySelector","ContactForm","haveError","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","find","item","showToast","onAddContact","prev","errorMessage","setTimeout","this","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","connect","dispatch","phone","onChangeFilter","length","contact","toLowerCase","includes","getVisibleContacts","onDeleteContact","TransitionGroup","component","list","map","appear","listItem","onClick","App","ReactDOM","render","StrictMode","loading","getElementById"],"mappings":"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","file":"static/js/main.d92fb99e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__2x3kf\",\"listItem\":\"contactList_listItem__3_7il\",\"listItemName\":\"contactList_listItemName__NLQ7d\",\"deleteButton\":\"contactList_deleteButton__1JHHB\",\"enter\":\"contactList_enter__CxJzZ\",\"enterActive\":\"contactList_enterActive__1zwWR\",\"exit\":\"contactList_exit__1cHqz\",\"exitActive\":\"contactList_exitActive__34-1t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"message_container__2gpME\",\"message\":\"message_message__2B2YD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"filter_input__37guU\"};","// import { v4 as uuidv4 } from 'uuid';\r\n// import types from './phonebook-types';\r\n\r\n// export const addContact = (name, number) => ({\r\n//   type: types.ADD,\r\n//   payload: { id: uuidv4(), name, number },\r\n// });\r\n\r\n// export const deleteContact = contactId => ({\r\n//   type: types.DELETE,\r\n//   payload: contactId,\r\n// });\r\n\r\n// export const changeFilter = filterValue => ({\r\n//   type: types.CHANGE_FILTER,\r\n//   payload: filterValue,\r\n// });\r\n\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = createAction(\"phonebook/add\", (name, number) => ({\r\n  payload: { id: uuidv4(), name, number },\r\n}));\r\nexport const deleteContact = createAction(\"phonebook/delete\");\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","// import { combineReducers } from 'redux';\r\n// import types from './phonebook-types';\r\n\r\n// const items = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.ADD:\r\n//       return [payload, ...state];\r\n\r\n//     case types.DELETE:\r\n//       return state.filter(({ id }) => id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filter = (state = '', { type, payload }) => {\r\n//   switch (type) {\r\n//     case types.CHANGE_FILTER:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [payload, ...state],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","// import { createStore, combineReducers } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const mainReducer = combineReducers({\r\n//   contacts: phonebookReducer,\r\n// });\r\n\r\n// const store = createStore(mainReducer, composeWithDevTools());\r\n\r\nimport phonebookReducer from \"./reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst phonebookPersistConfig = {\r\n  key: \"phonebook\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst def = { store, persistor };\r\n\r\nexport default def;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./message.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nfunction Toast({ message }) {\r\n  return createPortal(\r\n    <div className={s.container}>\r\n      <p className={s.message}>{message}</p>\r\n    </div>,\r\n    document.querySelector(\"#toast\")\r\n  );\r\n}\r\n\r\nToast.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Toast;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./contactForm.module.css\";\r\nimport Toast from \"../Message/Message\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../Phonebook/redux/actions\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    haveError: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (name === \"\" || name === \"\") {\r\n      this.showToast(\"Name or number can't be empty string\");\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.props.contacts.find((item) => item.name === name)) {\r\n      this.showToast(`${name} is already in contacts`);\r\n      this.setState({ name: \"\", number: \"\" });\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  showToast = (message) => {\r\n    this.setState((prev) => ({\r\n      haveError: !prev.haveError,\r\n      errorMessage: message,\r\n    }));\r\n    setTimeout(() => {\r\n      this.setState((prev) => ({\r\n        haveError: !prev.haveError,\r\n      }));\r\n    }, 1500);\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage, haveError } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={haveError}\r\n          timeout={250}\r\n          classNames=\"toast\"\r\n          unmountOnExit\r\n        >\r\n          <Toast message={errorMessage} />\r\n        </CSSTransition>\r\n\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddContact: (name, phone) => dispatch(addContact(name, phone)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from \"./filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../Phonebook/redux/actions\";\r\n\r\nfunction Filter({ value = \"\", onChangeFilter, items }) {\r\n  return (\r\n    <CSSTransition\r\n      in={items.length > 0}\r\n      timeout={500}\r\n      classNames=\"filter\"\r\n      unmountOnExit\r\n    >\r\n      <div>\r\n        <h3>Find contact by name</h3>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n  items: state.contacts.items,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./contactList.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../Phonebook/redux/actions\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={s.list}>\r\n      {contacts.length === 0 ? (\r\n        <CSSTransition\r\n          key={1}\r\n          timeout={700}\r\n          classNames=\"message-empty\"\r\n          unmountOnExit\r\n        >\r\n          <li>Contact list empty for now</li>\r\n        </CSSTransition>\r\n      ) : (\r\n        contacts.map(({ name, number, id }) => {\r\n          return (\r\n            <CSSTransition key={id} appear={true} timeout={250} classNames={s}>\r\n              <li className={s.listItem}>\r\n                <span>\r\n                  {name}: {number}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className={s.button}\r\n                  onClick={() => onDeleteContact(id)}\r\n                >\r\n                  Delete contact\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          );\r\n        })\r\n      )}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (contacts, filter) => {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { items, filter } = state.contacts;\r\n\r\n  const visibleContacts = getVisibleContacts(items, filter);\r\n\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import \"./App.css\";\r\nimport React from \"react\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/ContactList/ContactList\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./App.css\";\r\n\r\nexport default function App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Container\">\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames=\"title\"\r\n          unmountOnExit\r\n        >\r\n          <h1>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <ContactForm />\r\n\r\n        <h1>Contacts</h1>\r\n\r\n        <Filter />\r\n\r\n        <ContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Phonebook/redux/store\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__16pRy\",\"label\":\"contactForm_label__30v2P\",\"input\":\"contactForm_input__1DmPK\",\"button\":\"contactForm_button__2qgY1\"};"],"sourceRoot":""}